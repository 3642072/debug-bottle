{
  "name": "Debug-bottle",
  "tagline": "üçºDebug Bottle is an Android runtime debug / develop tools written using kotlin language.",
  "body": "[üá®üá≥ ‰∏≠Êñá](https://github.com/kiruto/debug-bottle/blob/1.0.0EAP/README-ZH.md) / [üáØüáµÊó•Êú¨Ë™û](https://github.com/kiruto/debug-bottle/blob/1.0.0EAP/README-JP.md) / [üá¨üáß English](https://github.com/kiruto/debug-bottle/blob/1.0.0EAP/README.md)\r\n\r\n# üçºDebug Bottle\r\n\r\nAn Android debug / develop tools written using Kotlin language. All the features in Debug bottle are only available on debug build version with your app, it doesn't has an impact on release version.\r\n\r\n- [CHANGELOG](https://github.com/kiruto/debug-bottle/blob/1.0.0EAP/CHANGELOG.md)\r\n- [TODO](https://github.com/kiruto/debug-bottle/blob/1.0.0EAP/TODO.md)\r\n\r\nDemo App is now available at Google Play:\r\n\r\n<a href=\"https://play.google.com/store/apps/details?id=me.chunyu.dev.yuriel.kotdebugtool\"><img alt=\"Get it on Google Play\" src=\"https://play.google.com/intl/en_us/badges/images/apps/en-play-badge-border.png\" width=\"300\" /></a>\r\n\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/introduction.gif\" width=\"225\" height=\"400\">](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/introduction.gif)\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/main-panel.png\"/>](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/main-panel.png)\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/features-2.png\"/>](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/features-2.png)\r\n\r\n## What can I do with Debug Bottle?\r\n- [Simple OkHttp Sniffer](#okhttp-sniffer)\r\n- [3D preview an Activity with Scalpel](#scalpel-viewer)\r\n- [Simple shared preferences editor](#shared-preferences-editor)\r\n- [Open strict mode any time](#strict-mode)\r\n- [Find leaks by using Leak Canary](#leak-canary)\r\n- [Find UI Blocks by using Block Canary](#block-canary)\r\n- [Mock Activity or function entries in developing](#development-entries)\r\n\r\n#### OkHttp Sniffer\r\nEnable \"Network Listener\" at Settings, then you can see all network traffics what requested by your app.\r\n\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/network-sniffer-1.png\"/>](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/network-sniffer-1.png)\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/network-sniffer-2.png\"/>](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/network-sniffer-2.png)\r\n\r\n#### Scalpel Viewer\r\nEnable \"3D View\", then you can view your Activity. When interaction is enabled the following gestures are supported:\r\n* Single touch: Controls the rotation of the model.\r\n* Two finger vertical pinch: Adjust zoom.\r\n* Two finger horizontal pinch: Adjust layer spacing.\r\n\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/scalpel-view.png\"/>](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/network-sniffer-2.png)\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/scalpel-view.gif\" width=\"225\" height=\"400\" />](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/scalpel-view.gif)\r\n\r\n#### Shared Preferences editor\r\nPreview and edit the Shared Preferences of app more simply.\r\n\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/shared-preferences-editor-1.png\"/>](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/network-sniffer-2.png)\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/shared-preferences-editor-2.png\"/>](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/network-sniffer-2.png)\r\n\r\n#### Strict Mode\r\nEnable or disable Android strict mode at runtime. StrictMode is a developer tool which detects things you might be doing by accident and brings them to your attention so you can fix them. StrictMode is most commonly used to catch accidental disk or network access on the application's main thread, where UI operations are received and animations take place. For more information, see [Android Developers](https://developer.android.com/reference/android/os/StrictMode.html).\r\n\r\n#### Leak Canary\r\nLeak Canary is fully imported. Leak Canary is a memory leak detection library for Android and Java. More about using Leak Canary by visiting [Leak Canary wiki](https://github.com/square/leakcanary/wiki/FAQ).\r\n\r\n#### Block Canary\r\nDetect UI blocks at runtime.\r\n\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/ui-blocks.png\"/>](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/network-sniffer-2.png)\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/block-canary-demo.gif\" width=\"225\" height=\"400\" />](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/block-canary-demo.gif)\r\n\r\n#### Development Entries\r\nLaunch any Activity with custom Intents, or Runnable you want.\r\n\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/all-activities.png\"/>](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/network-sniffer-2.png)\r\n[<img src=\"https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/run-activity-with-intent.gif\" width=\"225\" height=\"400\" />](https://github.com/kiruto/debug-bottle/raw/1.0.0EAP/screenshots/raw/run-activity-with-intent.gif)\r\n\r\n## How do I use it?\r\nAfter installing Debug Bottle Demo app, you'll find there are two app icons appears to launcher. Click bottle icon to run Debug Bottle.\r\n\r\n## Setting up\r\n\r\n#### 1. Configure your Gradle project\r\nAdd snapshot of maven central repository to primary Gradle file:\r\n```gradle\r\nallprojects {\r\n    repositories {\r\n        ...\r\n        maven {\r\n            url \"https://oss.sonatype.org/content/repositories/snapshots\"\r\n        }\r\n    }\r\n}\r\n```\r\nEdit and add dependencies in your app module:\r\n\r\n```gradle\r\ndependencies {\r\n    debugCompile 'com.exyui.android:debug-bottle-runtime:1.0.0EAP-SNAPSHOT'\r\n\r\n    // Use this in your Java project\r\n    releaseCompile 'com.exyui.android:debug-bottle-noop-java:1.0.0EAP-SNAPSHOT'\r\n    testCompile 'com.exyui.android:debug-bottle-noop-java:1.0.0EAP-SNAPSHOT'\r\n\r\n    // Use this in your Kotlin project\r\n    releaseCompile 'com.exyui.android:debug-bottle-noop-kotlin:1.0.0EAP-SNAPSHOT'\r\n    testCompile 'com.exyui.android:debug-bottle-noop-kotlin:1.0.0EAP-SNAPSHOT'\r\n\r\n    compile 'com.android.support:appcompat-v7:23.2.0+'\r\n}\r\n```\r\n\r\nSpecially, Debug Bottle not only support API 23+, but also 22. To support API 22, please add dependencies like this:\r\n```gradle\r\ndependencies {\r\n    debugCompile 'com.exyui.android:debug-bottle-runtime:1.0.0-support22-EAP-SNAPSHOT'\r\n\r\n    // Use this in your Java project\r\n    releaseCompile 'com.exyui.android:debug-bottle-noop-java:1.0.0-support22-EAP-SNAPSHOT'\r\n    testCompile 'com.exyui.android:debug-bottle-noop-java:1.0.0-support22-EAP-SNAPSHOT'\r\n\r\n    // Use this in your Kotlin project\r\n    releaseCompile 'com.exyui.android:debug-bottle-noop-kotlin:1.0.0-support22-EAP-SNAPSHOT'\r\n    testCompile 'com.exyui.android:debug-bottle-noop-kotlin:1.0.0-support22-EAP-SNAPSHOT'\r\n\r\n    compile 'com.android.support:appcompat-v7:22+'\r\n}\r\n```\r\n\r\nTo support API 23, add dependencies like this:\r\n```gradle\r\ndependencies {\r\n    debugCompile 'com.exyui.android:debug-bottle-runtime:1.0.0-support23-EAP-SNAPSHOT'\r\n\r\n    // Use this in your Java project\r\n    releaseCompile 'com.exyui.android:debug-bottle-noop-java:1.0.0-support23-EAP-SNAPSHOT'\r\n    testCompile 'com.exyui.android:debug-bottle-noop-java:1.0.0-support23-EAP-SNAPSHOT'\r\n\r\n    // Use this in your Kotlin project\r\n    releaseCompile 'com.exyui.android:debug-bottle-noop-kotlin:1.0.0-support23-EAP-SNAPSHOT'\r\n    testCompile 'com.exyui.android:debug-bottle-noop-kotlin:1.0.0-support23-EAP-SNAPSHOT'\r\n\r\n    compile 'com.android.support:appcompat-v7:23+'\r\n}\r\n```\r\n\r\n#### 2. Edit Manifest\r\nAdd Debug Bottle main Activity in your Manifest:\r\n```xml\r\n<activity\r\n    android:name=\"com.exyui.android.debugbottle.components.DTDrawerActivity\"\r\n    android:theme=\"@style/Theme.AppCompat.Light\"\r\n    android:label=\"The Name You Like\"/>\r\n```\r\nThe value of tag label, will display to your android launch pad.\r\n\r\n#### 3. Inject Debug Bottle into your Application\r\nFirst, you may implement Block Canary Context:\r\n```java\r\npublic class AppBlockCanaryContext extends BlockCanaryContext {...}\r\n```\r\n\r\nNow you could inject Debug Bottle in your Application like:\r\n```java\r\npublic class MyApplication extends Application{\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        DTInstaller.install(this)\r\n            .setBlockCanary(AppBlockCanaryContext(this))\r\n            .setOkHttpClient(httpClient)\r\n            .setInjector(\"your.package.injector.ContentInjector\")\r\n            .setPackageName(\"your.package\")\r\n            .enable()\r\n            .run();\r\n    }\r\n}\r\n```\r\n\r\nOr if you use Kotlin, you can inject like:\r\n```kotlin\r\nclass MyApplication: Application() {\r\n    override fun onCreate() {\r\n        super.onCreate()\r\n        DTInstaller.install(this)\r\n            .setBlockCanary(AppBlockCanaryContext(this))\r\n            .setOkHttpClient(httpClient)\r\n            .setInjector(\"your.package.injector.ContentInjector\")\r\n            .setPackageName(\"your.package\")\r\n            .enable()\r\n            .run()\r\n    }\r\n}\r\n```\r\n\r\n## Links\r\n\r\n* [Leak Canary](https://github.com/square/leakcanary)\r\n* [Android Performance Monitor](https://github.com/markzhai/AndroidPerformanceMonitor)\r\n* [Scalpel](https://github.com/JakeWharton/scalpel)\r\n\r\n## License\r\n\r\n```\r\nDebug Bottle\r\n\r\nCopyright 2016 Yuriel (http://exyui.com).\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\nAndroid Performance Monitor\r\n\r\nCopyright (C) 2016 MarkZhai (http://zhaiyifan.cn).\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\nLeak Canary\r\n\r\nCopyright 2015 Square, Inc.\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n\r\nScalpel\r\n\r\nCopyright 2014 Jake Wharton\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n   http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}